{"version":3,"sources":["gully.js"],"names":[],"mappings":"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","file":"gully.js","sourcesContent":["/**\n * Gully.js\n * License: MIT\n */\n\nexport default class Gully {\n\n\tconstructor(options = { hashBangs: true, viewAttribute: \"data-gully-view\", notFoundUrl: \"404\" }) {\n\n\t\tthis.routes = [];\n\t\tthis.hashBangs = options.hashBangs;\n\t\tthis.viewAttribute = options.viewAttribute;\n\t\tthis.notFoundUrl = options.notFoundUrl;\n\t\t\n\t\tthis.registerEvents(this.hashBangs);\n\t}\n\n\tstate(route = null) {\t\t\n\t\tif (route != null){\n\t\t\tthis.routes.push(route);\t\t\t\n\t\t} else {\n\t\t\tthrow (new Error('Cannot add empty state'));\n\t\t}\n\t\treturn this;\n\t}\n\n\tinit() {\n\t\tthis.handle();\n\t}\n\t\n\tregisterEvents(hb = true) {\n\n\t\tif(hb === true) {\t\t\t\n\t\t\twindow.addEventListener('hashchange', () => {\n\t\t\t\tthis.handle();\n\t\t\t});\n\t\t}\n\t}\n\n\thandle() {\t\t\n\n\t\tlet fragment = this.getUrlFragment();\n\t\tlet found = false;\t\t\n\t\tlet frags = fragment.split(/\\//);\n\n\t\tconsole.log(frags);\n\t\tfor(let r of this.routes) {\n\t\t\tlet match = r.url.match(/\\/([^\\/]*).*$/);\n\t\t\tlet userRoutes = match ? match[1] : '';\n\n\t\t\tif(userRoutes.trim() === fragment.trim()) {\n\t\t\t\tthis.applyState(userRoutes.trim(), r);\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t}\n\t\tif(! found) {\n\t\t\tthis.handleNotFoundUrl();\n\t\t}\n\t}\n\n\tapplyState(url, route) {\t\t\t\t\n\t\t\n\t\tif(route.controller) {\n\t\t\troute.controller();\n\t\t}\n\t\t\n\t\tlet viewElement = this.selectElement();\n\t\t\n\t\tfetch(route.templateUrl)\n\t\t\t.then(function(response) {\n\t\t\t\treturn response.text()\n\t\t\t}).then(function(body) {\n\t\t\t\tviewElement.innerHTML = body\n\t\t\t});\n\t\t\n\t}\n\n\thandleNotFoundUrl() {\n\t\tlet url = window.location.href;\n\t\turl = url.replace(/#(.*)$/, '#/' + this.notFoundUrl);\n\t\twindow.location = url;\n\t}\n\n\tselectElement() {\n\n\t\tif(document.querySelectorAll) {\n\t\t\treturn document.querySelector('[' + this.viewAttr + ']');\n\t\t} else {\n\t\t\tlet matchingElement = undefined;\n\t\t\tlet allElements = document.getElementsByTagName('*');\n\t\t\tfor (let elt of allElements) {\n\t\t\t\tif (elt.getAttribute(this.viewAttr) !== null) {\n\t\t\t\t\tmatchingElement = allElements[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matchingElement;\n\t\t}\n\t}\n\n\tgetUrlFragment() {\t\t\n\t\tlet match = window.location.href.match(/\\/#\\/(.*)/);\t\t\t\t\n        let frag = match ? match[1] : '';        \n\n        return frag;\n\t}\n\t\t\n}"],"sourceRoot":"/source/"}